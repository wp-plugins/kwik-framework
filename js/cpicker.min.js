jQuery && function(t) {
    function i(i, e) {
        var c = t('<span class="cpicker" />'),
            a = t.cpicker.defaultSettings;
        i.data("cpicker-initialized") || (e = t.extend(!0, {}, a, e), c.addClass("cpicker-theme-" + e.theme).addClass("cpicker-swatch-position-" + e.swatchPosition).toggleClass("cpicker-swatch-left", "left" === e.swatchPosition).toggleClass("cpicker-with-opacity", e.opacity), void 0 !== e.position && t.each(e.position.split(" "), function() {
            c.addClass("cpicker-position-" + this)
        }), i.addClass("cpicker-input").data("cpicker-initialized", !0).data("cpicker-settings", e).prop("size", 7).prop("maxlength", 7).wrap(c).after('<span class="cpicker-panel cpicker-slider-' + e.control + '"><span class="cpicker-slider"><span class="cpicker-picker"></span></span><span class="cpicker-opacity-slider"><span class="cpicker-picker"></span></span><span class="cpicker-grid"><span class="cpicker-grid-inner"></span><span class="cpicker-picker"><span></span></span></span></span>'), i.parent().find(".cpicker-panel").on("selectstart", function() {
            return !1
        }).end(), "left" === e.swatchPosition ? i.before('<span class="cpicker-swatch"><span></span></span>') : i.after('<span class="cpicker-swatch"><span></span></span>'), e.textfield || i.addClass("cpicker-hidden"), e.inline && i.parent().addClass("cpicker-inline"), o(i, !1, !0))
    }

    function e(t) {
        var i = t.parent();
        t.removeData("cpicker-initialized").removeData("cpicker-settings").removeProp("size").removeProp("maxlength").removeClass("cpicker-input"), i.before(t).remove()
    }

    function c(t) {
        o(t)
    }

    function a(t) {
        var i = t.parent(),
            e = i.find(".cpicker-panel"),
            c = t.data("cpicker-settings");
        !t.data("cpicker-initialized") || t.prop("disabled") || i.hasClass("cpicker-inline") || i.hasClass("cpicker-focus") || (r(), i.addClass("cpicker-focus"), e.stop(!0, !0).fadeIn(c.showSpeed, function() {
            c.show && c.show.call(t)
        }))
    }

    function r() {
        t(".cpicker-input").each(function() {
            var i = t(this),
                e = i.data("cpicker-settings"),
                c = i.parent();
            e.inline || c.find(".cpicker-panel").fadeOut(e.hideSpeed, function() {
                c.hasClass("cpicker-focus") && e.hide && e.hide.call(i), c.removeClass("cpicker-focus")
            })
        })
    }

    function n(t, i, e) {
        var c, a, r, n, o = t.parents(".cpicker").find(".cpicker-input"),
            p = o.data("cpicker-settings"),
            h = t.find("[class$=-picker]"),
            l = t.offset().left,
            d = t.offset().top,
            u = Math.round(i.pageX - l),
            g = Math.round(i.pageY - d),
            k = e ? p.animationSpeed : 0;
        i.originalEvent.changedTouches && (u = i.originalEvent.changedTouches[0].pageX - l, g = i.originalEvent.changedTouches[0].pageY - d), 0 > u && (u = 0), 0 > g && (g = 0), u > t.width() && (u = t.width()), g > t.height() && (g = t.height()), t.parent().is(".cpicker-slider-wheel") && h.parent().is(".cpicker-grid") && (c = 75 - u, a = 75 - g, r = Math.sqrt(c * c + a * a), n = Math.atan2(a, c), 0 > n && (n += 2 * Math.PI), r > 75 && (r = 75, u = 75 - 75 * Math.cos(n), g = 75 - 75 * Math.sin(n)), u = Math.round(u), g = Math.round(g)), t.is(".cpicker-grid") ? h.stop(!0).animate({
            top: g + "px",
            left: u + "px"
        }, k, p.animationEasing, function() {
            s(o, t)
        }) : h.stop(!0).animate({
            top: g + "px"
        }, k, p.animationEasing, function() {
            s(o, t)
        })
    }

    function s(t, i) {
        function e(t, i) {
            var e, c;
            return t.length && i ? (e = t.offset().left, c = t.offset().top, {
                x: e - i.offset().left + t.outerWidth() / 2,
                y: c - i.offset().top + t.outerHeight() / 2
            }) : null
        }
        var c, a, r, n, s, o, h, l = t.val(),
            u = t.attr("data-opacity"),
            k = t.parent(),
            f = t.data("cpicker-settings"),
            v = (k.find(".cpicker-panel"), k.find(".cpicker-swatch")),
            y = k.find(".cpicker-grid"),
            w = k.find(".cpicker-slider"),
            m = k.find(".cpicker-opacity-slider"),
            M = y.find("[class$=-picker]"),
            C = w.find("[class$=-picker]"),
            x = m.find("[class$=-picker]"),
            S = e(M, y),
            P = e(C, w),
            z = e(x, m);
        if (i.is(".cpicker-grid, .cpicker-slider")) {
            switch (f.control) {
                case "wheel":
                    n = y.width() / 2 - S.x, s = y.height() / 2 - S.y, o = Math.sqrt(n * n + s * s), h = Math.atan2(s, n), 0 > h && (h += 2 * Math.PI), o > 75 && (o = 75, S.x = 69 - 75 * Math.cos(h), S.y = 69 - 75 * Math.sin(h)), a = g(o / .75, 0, 100), c = g(180 * h / Math.PI, 0, 360), r = g(100 - Math.floor(P.y * (100 / w.height())), 0, 100), l = b({
                        h: c,
                        s: a,
                        b: r
                    }), w.css("backgroundColor", b({
                        h: c,
                        s: a,
                        b: 100
                    }));
                    break;
                case "saturation":
                    c = g(parseInt(S.x * (360 / y.width())), 0, 360), a = g(100 - Math.floor(P.y * (100 / w.height())), 0, 100), r = g(100 - Math.floor(S.y * (100 / y.height())), 0, 100), l = b({
                        h: c,
                        s: a,
                        b: r
                    }), w.css("backgroundColor", b({
                        h: c,
                        s: 100,
                        b: r
                    })), k.find(".cpicker-grid-inner").css("opacity", a / 100);
                    break;
                case "brightness":
                    c = g(parseInt(S.x * (360 / y.width())), 0, 360), a = g(100 - Math.floor(S.y * (100 / y.height())), 0, 100), r = g(100 - Math.floor(P.y * (100 / w.height())), 0, 100), l = b({
                        h: c,
                        s: a,
                        b: r
                    }), w.css("backgroundColor", b({
                        h: c,
                        s: a,
                        b: 100
                    })), k.find(".cpicker-grid-inner").css("opacity", 1 - r / 100);
                    break;
                default:
                    c = g(360 - parseInt(P.y * (360 / w.height())), 0, 360), a = g(Math.floor(S.x * (100 / y.width())), 0, 100), r = g(100 - Math.floor(S.y * (100 / y.height())), 0, 100), l = b({
                        h: c,
                        s: a,
                        b: r
                    }), y.css("backgroundColor", b({
                        h: c,
                        s: 100,
                        b: 100
                    }))
            }
            t.val(d(l, f.letterCase))
        }
        i.is(".cpicker-opacity-slider") && (u = f.opacity ? parseFloat(1 - z.y / m.height()).toFixed(2) : 1, f.opacity && t.attr("data-opacity", u)), v.find("SPAN").css({
            backgroundColor: l,
            opacity: u
        }), p(t, l, u)
    }

    function o(t, i, e) {
        var c, a, r, n, s, o, h, l = t.parent(),
            k = t.data("cpicker-settings"),
            f = l.find(".cpicker-swatch"),
            y = l.find(".cpicker-grid"),
            w = l.find(".cpicker-slider"),
            m = l.find(".cpicker-opacity-slider"),
            M = y.find("[class$=-picker]"),
            C = w.find("[class$=-picker]"),
            x = m.find("[class$=-picker]");
        switch (c = d(u(t.val(), !0), k.letterCase), c || (c = d(u(k.defaultValue, !0))), a = v(c), i || t.val(c), k.opacity && (r = "" === t.attr("data-opacity") ? 1 : g(parseFloat(t.attr("data-opacity")).toFixed(2), 0, 1), isNaN(r) && (r = 1), t.attr("data-opacity", r), f.find("SPAN").css("opacity", r), s = g(m.height() - m.height() * r, 0, m.height()), x.css("top", s + "px")), f.find("SPAN").css("backgroundColor", c), k.control) {
            case "wheel":
                o = g(Math.ceil(.75 * a.s), 0, y.height() / 2), h = a.h * Math.PI / 180, n = g(75 - Math.cos(h) * o, 0, y.width()), s = g(75 - Math.sin(h) * o, 0, y.height()), M.css({
                    top: s + "px",
                    left: n + "px"
                }), s = 150 - a.b / (100 / y.height()), "" === c && (s = 0), C.css("top", s + "px"), w.css("backgroundColor", b({
                    h: a.h,
                    s: a.s,
                    b: 100
                }));
                break;
            case "saturation":
                n = g(5 * a.h / 12, 0, 150), s = g(y.height() - Math.ceil(a.b / (100 / y.height())), 0, y.height()), M.css({
                    top: s + "px",
                    left: n + "px"
                }), s = g(w.height() - a.s * (w.height() / 100), 0, w.height()), C.css("top", s + "px"), w.css("backgroundColor", b({
                    h: a.h,
                    s: 100,
                    b: a.b
                })), l.find(".cpicker-grid-inner").css("opacity", a.s / 100);
                break;
            case "brightness":
                n = g(5 * a.h / 12, 0, 150), s = g(y.height() - Math.ceil(a.s / (100 / y.height())), 0, y.height()), M.css({
                    top: s + "px",
                    left: n + "px"
                }), s = g(w.height() - a.b * (w.height() / 100), 0, w.height()), C.css("top", s + "px"), w.css("backgroundColor", b({
                    h: a.h,
                    s: a.s,
                    b: 100
                })), l.find(".cpicker-grid-inner").css("opacity", 1 - a.b / 100);
                break;
            default:
                n = g(Math.ceil(a.s / (100 / y.width())), 0, y.width()), s = g(y.height() - Math.ceil(a.b / (100 / y.height())), 0, y.height()), M.css({
                    top: s + "px",
                    left: n + "px"
                }), s = g(w.height() - a.h / (360 / w.height()), 0, w.height()), C.css("top", s + "px"), y.css("backgroundColor", b({
                    h: a.h,
                    s: 100,
                    b: 100
                }))
        }
        e || p(t, c, r)
    }

    function p(t, i, e) {
        var c = t.data("cpicker-settings");
        i + e !== t.data("cpicker-lastChange") && (t.data("cpicker-lastChange", i + e), c.change && (c.changeDelay ? (clearTimeout(t.data("cpicker-changeTimeout")), t.data("cpicker-changeTimeout", setTimeout(function() {
            c.change.call(t, i, e)
        }, c.changeDelay))) : c.change.call(t, i, e)))
    }

    function h(i) {
        var e = u(t(i).val(), !0),
            c = w(e),
            a = t(i).attr("data-opacity");
        return c ? (void 0 !== a && t.extend(c, {
            a: parseFloat(a)
        }), c) : null
    }

    function l(i, e) {
        var c = u(t(i).val(), !0),
            a = w(c),
            r = t(i).attr("data-opacity");
        return a ? (void 0 === r && (r = 1), e ? "rgba(" + a.r + ", " + a.g + ", " + a.b + ", " + parseFloat(r) + ")" : "rgb(" + a.r + ", " + a.g + ", " + a.b + ")") : null
    }

    function d(t, i) {
        return "uppercase" === i ? t.toUpperCase() : t.toLowerCase()
    }

    function u(t, i) {
        return t = t.replace(/[^A-F0-9]/gi, ""), 3 !== t.length && 6 !== t.length ? "" : (3 === t.length && i && (t = t[0] + t[0] + t[1] + t[1] + t[2] + t[2]), "#" + t)
    }

    function g(t, i, e) {
        return i > t && (t = i), t > e && (t = e), t
    }

    function k(t) {
        var i = {}, e = Math.round(t.h),
            c = Math.round(255 * t.s / 100),
            a = Math.round(255 * t.b / 100);
        if (0 === c) i.r = i.g = i.b = a;
        else {
            var r = a,
                n = (255 - c) * a / 255,
                s = (r - n) * (e % 60) / 60;
            360 === e && (e = 0), 60 > e ? (i.r = r, i.b = n, i.g = n + s) : 120 > e ? (i.g = r, i.b = n, i.r = r - s) : 180 > e ? (i.g = r, i.r = n, i.b = n + s) : 240 > e ? (i.b = r, i.r = n, i.g = r - s) : 300 > e ? (i.b = r, i.g = n, i.r = n + s) : 360 > e ? (i.r = r, i.g = n, i.b = r - s) : (i.r = 0, i.g = 0, i.b = 0)
        }
        return {
            r: Math.round(i.r),
            g: Math.round(i.g),
            b: Math.round(i.b)
        }
    }

    function f(i) {
        var e = [i.r.toString(16), i.g.toString(16), i.b.toString(16)];
        return t.each(e, function(t, i) {
            1 === i.length && (e[t] = "0" + i)
        }), "#" + e.join("")
    }

    function b(t) {
        return f(k(t))
    }

    function v(t) {
        var i = y(w(t));
        return 0 === i.s && (i.h = 360), i
    }

    function y(t) {
        var i = {
            h: 0,
            s: 0,
            b: 0
        }, e = Math.min(t.r, t.g, t.b),
            c = Math.max(t.r, t.g, t.b),
            a = c - e;
        return i.b = c, i.s = 0 !== c ? 255 * a / c : 0, i.h = 0 !== i.s ? t.r === c ? (t.g - t.b) / a : t.g === c ? 2 + (t.b - t.r) / a : 4 + (t.r - t.g) / a : -1, i.h *= 60, i.h < 0 && (i.h += 360), i.s *= 100 / 255, i.b *= 100 / 255, i
    }

    function w(t) {
        return t = parseInt(t.indexOf("#") > -1 ? t.substring(1) : t, 16), {
            r: t >> 16,
            g: (65280 & t) >> 8,
            b: 255 & t
        }
    }
    t.cpicker = {
        defaultSettings: {
            animationSpeed: 100,
            animationEasing: "swing",
            change: null,
            changeDelay: 0,
            control: "hue",
            defaultValue: "",
            hide: null,
            hideSpeed: 100,
            inline: !1,
            letterCase: "lowercase",
            opacity: !1,
            position: "default",
            show: null,
            showSpeed: 100,
            swatchPosition: "left",
            textfield: !0,
            theme: "default"
        }
    }, t.extend(t.fn, {
        cpicker: function(n, s) {
            switch (n) {
                case "destroy":
                    return t(this).each(function() {
                        e(t(this))
                    }), t(this);
                case "hide":
                    return r(), t(this);
                case "opacity":
                    return void 0 === s ? t(this).attr("data-opacity") : (t(this).each(function() {
                        c(t(this).attr("data-opacity", s))
                    }), t(this));
                case "rgbObject":
                    return h(t(this), "rgbaObject" === n);
                case "rgbString":
                case "rgbaString":
                    return l(t(this), "rgbaString" === n);
                case "settings":
                    return void 0 === s ? t(this).data("cpicker-settings") : (t(this).each(function() {
                        var i = t(this).data("cpicker-settings") || {};
                        e(t(this)), t(this).cpicker(t.extend(!0, i, s))
                    }), t(this));
                case "show":
                    return a(t(this).eq(0)), t(this);
                case "value":
                    return void 0 === s ? t(this).val() : (t(this).each(function() {
                        c(t(this).val(s))
                    }), t(this));
                case "create":
                default:
                    return "create" !== n && (s = n), t(this).each(function() {
                        i(t(this), s)
                    }), t(this)
            }
        }
    }), t(document).on("mousedown.cpicker touchstart.cpicker", function(i) {
        t(i.target).parents().add(i.target).hasClass("cpicker") || r()
    }).on("mousedown.cpicker touchstart.cpicker", ".cpicker-grid, .cpicker-slider, .cpicker-opacity-slider", function(i) {
        var e = t(this);
        i.preventDefault(), t(document).data("cpicker-target", e), n(e, i, !0)
    }).on("mousemove.cpicker touchmove.cpicker", function(i) {
        var e = t(document).data("cpicker-target");
        e && n(e, i)
    }).on("mouseup.cpicker touchend.cpicker", function() {
        t(this).removeData("cpicker-target")
    }).on("mousedown.cpicker touchstart.cpicker", ".cpicker-swatch", function() {
        var i = t(this).parent().find(".cpicker-input"),
            e = i.parent();
        e.hasClass("cpicker-focus") ? r(i) : a(i)
    }).on("focus.cpicker", ".cpicker-input", function() {
        var i = t(this);
        i.data("cpicker-initialized") && a(i)
    }).on("blur.cpicker", ".cpicker-input", function() {
        var i = t(this),
            e = i.data("cpicker-settings");
        i.data("cpicker-initialized") && (i.val(u(i.val(), !0)), "" === i.val() && i.val(u(e.defaultValue, !0)), i.val(d(i.val(), e.letterCase)))
    }).on("keydown.cpicker", ".cpicker-input", function(i) {
        var e = t(this);
        if (e.data("cpicker-initialized")) switch (i.keyCode) {
            case 9:
                r();
                break;
            case 27:
                r(), e.blur()
        }
    }).on("keyup.cpicker", ".cpicker-input", function() {
        var i = t(this);
        i.data("cpicker-initialized") && o(i, !0)
    }).on("paste.cpicker", ".cpicker-input", function() {
        var i = t(this);
        i.data("cpicker-initialized") && setTimeout(function() {
            o(i, !0)
        }, 1)
    })
}(jQuery), jQuery(document).ready(function(t) {
    t("input.cpicker").each(function() {
        t(this).cpicker({
            change: function() {
                var i = t(this);
                i.parent(".cpicker").after(function() {
                    return t(this).siblings(".clear_color").length < 1 ? '<span class="clear_color tooltip" title="Clearing the color will make it &quot;transparent&quot;"></span>' : void 0
                })
            }
        })
    }), t(".clear_color").live("click", function() {
        var i = t(this).siblings(".cpicker"),
            e = i.children(".cpicker-swatch");
        i.children("input").val(""), e.children("span").attr("style", ""), t(this).remove()
    })
});
